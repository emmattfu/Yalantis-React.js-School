{"version":3,"sources":["redux/types.js","components/Header.jsx","utils/utils.js","components/EmployeesBrithdayItem.jsx","components/EmployeesBirthday.jsx","redux/actions.js","components/Employee.jsx","components/EmployeeListItem.jsx","components/EmployeesList.jsx","pages/Employees.jsx","pages/Home.jsx","App.js","reportWebVitals.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["GET_EMPLOYEES","CHOOSE_EMPLOYEE","REMOVE_EMPLOYEE","Header","className","exact","to","activeClassName","getEmployeeDate","employee","date","Date","dob","getDate","monthIndex","getMonth","year","getFullYear","monthsArr","month","id","alphabetArr","letter","EmployeesBrithdayItem","months","employeesThisMonth","employees","filter","emp","length","map","lastName","firstName","EmployeesBrithday","selectedEmployees","useSelector","state","require","Employee","person","useState","some","el","isChecked","setIsChecked","dispatch","useDispatch","style","display","type","onChange","e","payload","localStorage","setItem","JSON","stringify","updatedSelectedEmployees","target","prev","checked","EmployeeListItem","employeesArr","EmployeesList","alphabet","elem","Employees","useEffect","a","fetch","data","json","console","log","Home","padding","textAlign","App","basename","fontWeight","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","parse","getItem","rootReducer","action","filteredEmployees","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9f78c52.chunk.js","sourcesContent":["export const GET_EMPLOYEES = \"GET_EMPLOYEES\"\r\nexport const CHOOSE_EMPLOYEE = \"CHOOSE_EMPLOYEE\"\r\nexport const REMOVE_EMPLOYEE = \"REMOVE_EMPLOYEE\"","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nimport \"../styles/header.css\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <nav className=\"header__nav\">\r\n                <NavLink exact to=\"/\" activeClassName=\"link-active\">Home</NavLink>\r\n                <NavLink exact to=\"/employees\" activeClassName=\"link-active\">Employees</NavLink>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export const getEmployeeDate = (employee) => {\r\n  const date = new Date(employee.dob).getDate();\r\n  const monthIndex = new Date(employee.dob).getMonth();\r\n  const year = new Date(employee.dob).getFullYear();\r\n\r\n  return { date, monthIndex, year };\r\n};\r\n\r\nexport const monthsArr = [\r\n  { month: \"January\", id: 0 },\r\n  { month: \"February\", id: 1 },\r\n  { month: \"March\", id: 2 },\r\n  { month: \"April\", id: 3 },\r\n  { month: \"May\", id: 4 },\r\n  { month: \"June\", id: 5 },\r\n  { month: \"July\", id: 6 },\r\n  { month: \"August\", id: 7 },\r\n  { month: \"September\", id: 8 },\r\n  { month: \"October\", id: 9 },\r\n  { month: \"November\", id: 10 },\r\n  { month: \"December\", id: 11 },\r\n];\r\n\r\nexport const alphabetArr = [\r\n    { letter: \"A\", id: 0 },\r\n    { letter: \"B\", id: 1 },\r\n    { letter: \"C\", id: 2 },\r\n    { letter: \"D\", id: 3 },\r\n    { letter: \"E\", id: 4 },\r\n    { letter: \"F\", id: 5 },\r\n    { letter: \"G\", id: 6 },\r\n    { letter: \"H\", id: 7 },\r\n    { letter: \"I\", id: 8 },\r\n    { letter: \"J\", id: 9 },\r\n    { letter: \"K\", id: 10 },\r\n    { letter: \"L\", id: 11 },\r\n    { letter: \"M\", id: 12 },\r\n    { letter: \"N\", id: 13 },\r\n    { letter: \"O\", id: 14 },\r\n    { letter: \"P\", id: 15 },\r\n    { letter: \"Q\", id: 16 },\r\n    { letter: \"R\", id: 17 },\r\n    { letter: \"S\", id: 18 },\r\n    { letter: \"T\", id: 19 },\r\n    { letter: \"U\", id: 20 },\r\n    { letter: \"V\", id: 21 },\r\n    { letter: \"W\", id: 22 },\r\n    { letter: \"X\", id: 23 },\r\n    { letter: \"Y\", id: 24 },\r\n    { letter: \"Z\", id: 25 },\r\n  ]","import React from 'react'\r\nimport { getEmployeeDate } from '../utils/utils'\r\n\r\nconst EmployeesBrithdayItem = ({month, months, employees}) => {\r\n\r\n    const employeesThisMonth = employees.filter(emp => {\r\n        const {monthIndex} = getEmployeeDate(emp)\r\n        return months[monthIndex].month === month.month\r\n    })\r\n    \r\n    if (!employeesThisMonth.length) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <h3>{month.month}</h3>\r\n            <ul>\r\n                {employeesThisMonth.map(employee => {\r\n                    const {date, monthIndex, year} = getEmployeeDate(employee)\r\n\r\n                    return (\r\n                    <li key={employee.id}>\r\n                        {`${employee.lastName} ${employee.firstName} - ${date} ${months[monthIndex].month} ${year} year`}\r\n                    </li>)\r\n                })}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeesBrithdayItem","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport EmployeesBrithdayItem from './EmployeesBrithdayItem'\r\nimport { monthsArr } from '../utils/utils'\r\n\r\nconst EmployeesBrithday = () => {\r\n    const selectedEmployees  = useSelector(state => state.selectedEmployees)\r\n    const months = [...monthsArr]\r\n    \r\n\r\n    if (!selectedEmployees.length) {\r\n        return <h2>No selected employees</h2>\r\n    }\r\n\r\n    return (\r\n       <>\r\n        {months.map(month => <EmployeesBrithdayItem key={month.id} month={month} months={months} employees={selectedEmployees}/>)}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default EmployeesBrithday","const { GET_EMPLOYEES, CHOOSE_EMPLOYEE, REMOVE_EMPLOYEE } = require(\"./types\")\r\n\r\nexport const getEmployees = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const data = await fetch('https://yalantis-react-school-api.yalantis.com/api/task0/users')\r\n            const employees = await data.json()\r\n            dispatch({type: GET_EMPLOYEES, payload: employees})\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const chooseEmployee = employee => {\r\n    return {type: CHOOSE_EMPLOYEE, payload: employee}\r\n}\r\n\r\nexport const removeEmployee = id => {\r\n    return {type: REMOVE_EMPLOYEE, payload: id}\r\n}","import React, {useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { chooseEmployee, removeEmployee } from '../redux/actions'\r\n\r\nconst Employee = ({person}) => {\r\n    const selectedEmployees = useSelector(state => state.selectedEmployees)\r\n    const [isChecked, setIsChecked] = useState(selectedEmployees.some((el) => el.id === person.id))\r\n    const dispatch = useDispatch()\r\n    \r\n    const onChangeHandler = (e) =>{\r\n        if (isChecked === false) {\r\n            dispatch(chooseEmployee(person))\r\n            localStorage.setItem(\"selectedEmployees\", JSON.stringify([...selectedEmployees, person]));\r\n        } else {\r\n            const updatedSelectedEmployees = selectedEmployees.filter(el => el.id !== e.target.id )\r\n            dispatch(removeEmployee(e.target.id))\r\n            localStorage.setItem(\"selectedEmployees\", JSON.stringify(updatedSelectedEmployees))\r\n        }\r\n        \r\n        setIsChecked(prev => !prev)\r\n    }\r\n\r\n    return (\r\n        <div className=\"employee\" style={{display: \"flex\"}}>\r\n            <div>{person.lastName} {person.firstName}</div>\r\n            <input type=\"checkbox\" id={person.id} onChange={onChangeHandler} checked={isChecked} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employee","import React from 'react'\r\nimport Employee from './Employee'\r\n\r\nconst EmployeeListItem = ({letter, employees}) => {\r\n\r\n    const employeesArr = employees.filter(employee => employee.lastName[0] === letter.letter)\r\n\r\n    if (!employeesArr.length) {\r\n        return <div>------</div>\r\n    }\r\n\r\n    return (\r\n        <>    \r\n            {employeesArr.map(el => <Employee key={el.id} person={el}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeeListItem\r\n","import React from 'react'\r\nimport EmployeeListItem from './EmployeeListItem'\r\n\r\nimport \"../styles/employeesList.css\"\r\n\r\nconst EmployeesList = ({alphabet, employees}) => {\r\n\r\n    if(!alphabet) {\r\n        return (\r\n            <h1>Loading</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"employeesList\">\r\n            {alphabet.map(elem => {\r\n\r\n                return (\r\n                    <div className=\"employeesList__item\" key={elem.id}>\r\n                        <div className=\"employeesList__item-letter\">{elem.letter}</div>\r\n                        <EmployeeListItem letter={elem} employees={employees}/>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeesList","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EmployeesBrithday from \"../components/EmployeesBirthday\";\r\nimport EmployeesList from \"../components/EmployeesList\";\r\nimport { getEmployees } from \"../redux/actions\";\r\nimport { alphabetArr } from \"../utils/utils\"\r\n\r\nimport \"../styles/employees.css\";\r\n\r\nconst Employees = () => {\r\n  const dispatch = useDispatch();\r\n  const employees = useSelector((state) => state.employees);\r\n  const alphabet = [...alphabetArr]\r\n\r\n  useEffect(() => {\r\n    dispatch(getEmployees());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"employees page\">\r\n      <div className=\"employees__list\">\r\n        <h2>Employees</h2>\r\n        <EmployeesList alphabet={alphabet} employees={employees} />\r\n      </div>\r\n\r\n      <div className=\"employees__birthday\"> \r\n        <h2>Employees birthday</h2>\r\n        <EmployeesBrithday />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home page\" style={{padding: \"0 15px\", textAlign: \"center\"}}>\r\n            <h1>My name is Maksim Novikov and welcome to my test project :)</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header from './components/Header';\r\nimport Employees from './pages/Employees';\r\nimport Home from './pages/Home';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"/Yalantis-React.js-School\">\r\n      <div className=\"text\" style={{fontWeight: \"bold\"}}>\r\n        <Header />\r\n        <div className=\"App\">\r\n        <Switch>\r\n          <Route exact component={Home} path=\"/\"/>\r\n          <Route exact component={Employees} path=\"/employees\"/>\r\n        </Switch>\r\n        </div>\r\n       \r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { CHOOSE_EMPLOYEE, GET_EMPLOYEES, REMOVE_EMPLOYEE } from \"./types\";\r\n\r\nconst initialState = {\r\n  employees: [],\r\n  selectedEmployees: JSON.parse(localStorage.getItem('selectedEmployees')) || [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  if (action.type === GET_EMPLOYEES) {\r\n    return { ...state, employees: [...action.payload] };\r\n  } else if (action.type === CHOOSE_EMPLOYEE){\r\n      return {...state, selectedEmployees: [...state.selectedEmployees, action.payload]}\r\n  } else if (action.type === REMOVE_EMPLOYEE) {\r\n      const filteredEmployees = state.selectedEmployees.filter(el => el.id !== action.payload)\r\n      return {...state, selectedEmployees: filteredEmployees}\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from './rootReducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}